---
description: 
globs: 
alwaysApply: false
---
# Cursor IDE MCP 도구 관리 규칙

## MCP 컨텍스트 감지 규칙
- MCP 서버 관련 작업 시 자동으로 다음 컨텍스트를 감지합니다:
  - 코드 분석 요청
  - AI 기반 코드 생성
  - 코드 리팩토링 제안
  - 버그 수정 제안
  - 코드 최적화 제안
  - 문서 생성 요청

## 1. MCP 서버 사용 규칙
- MCP 서버는 코드 분석 및 AI 기능을 제공하는 핵심 서버입니다.
- 서버 연결 상태를 주기적으로 모니터링하고 이상 시 즉시 보고합니다.
- 서버 리소스 사용량을 최적화하여 불필요한 요청을 최소화합니다.
- 보안을 위해 서버 접근 권한을 엄격히 관리합니다.
- MCP 설치는 공식 배포된 MCP 서버만 사용하며, 커스텀 MCP는 별도 검증 후 도입합니다.

## 2. 빌드 도구 사용 규칙
- 프로젝트별로 적절한 빌드 도구를 선택하고 일관성 있게 사용합니다.
- 빌드 설정은 버전 관리 시스템에 포함하여 관리합니다.
- 빌드 스크립트는 모듈화하고 재사용 가능하게 작성합니다.
- 빌드 실패 시 로그를 상세히 기록하고 분석합니다.

## 3. 커맨드 라인 기반 extension 도구 사용 규칙
- extension 도구는 공식 저장소에서 검증된 것만 사용합니다.
- extension 설치 및 업데이트는 버전 관리가 가능하도록 기록합니다.
- extension 간의 의존성 충돌을 주기적으로 점검합니다.
- 사용하지 않는 extension은 제거하여 리소스 낭비를 방지합니다.

## 4. IDE 제공 도구 사용 규칙
- IDE의 기본 기능을 최대한 활용하여 개발 효율성을 높입니다.
- 단축키와 매크로를 적극 활용하여 반복 작업을 자동화합니다.
- 디버깅 도구를 활용하여 코드 품질을 향상시킵니다.
- IDE 설정은 팀 내에서 표준화하여 일관성을 유지합니다.

## 공통 규칙
- 모든 도구 사용에 대한 문서화를 철저히 합니다.
- 정기적인 도구 업데이트 및 점검을 수행합니다.
- 문제 발생 시 즉시 보고하고 해결 방안을 제시합니다.
- 도구 사용에 대한 교육 및 공유를 정기적으로 진행합니다.

## MCP 컨텍스트 감지 시 자동 적용 규칙
- MCP 관련 작업 감지 시 자동으로 다음 규칙을 적용합니다:
  1. 서버 연결 상태 확인
  2. 리소스 사용량 모니터링
  3. 보안 접근 권한 검증
  4. 작업 로그 자동 기록
  5. 성능 최적화 제안
  6. 관련 문서 자동 생성

